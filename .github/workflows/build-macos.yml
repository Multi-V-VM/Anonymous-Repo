name: build-macos

on: push

jobs:
  test:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        build: [Debug, Release]
        standard: [cxx23]

    defaults:
      run:
        shell: bash

    name: "${{matrix.standard}}-${{matrix.build}}"
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependency
      run: brew install cxxopts fmt llvm@14 google-benchmark ninja libpcap

    - name: Checkout
      run: |
        git submodule update --init --recursive

    - name: Install WASI SDK
      run: |
        cd /opt
        sudo wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-macos.tar.gz
        sudo tar -xzf wasi-sdk-*.tar.gz
        sudo mv wasi-sdk-20.0 wasi-sdk

    - name: Make WASI Socket Ext
      run: |
        cd lib/wasm-micro-runtime/samples/socket-api/
        cmake .
        make -j

    - name: Install AOT wamrc
      run: |
        cd lib/wasm-micro-runtime/wamr-compiler
        mkdir build
        cd build
        cmake .. -DWAMR_BUILD_AOT=1 -DWAMR_BUILD_AOT_STACK_FRAME=1 -DWAMR_BUILD_DEBUG_AOT=0 -DWAMR_BUILD_DUMP_CALL_STACK=1  -DWAMR_BUILD_CUSTOM_NAME_SECTION=1 -DWAMR_BUILD_SHARED_MEMORY=1 -DWAMR_BUILD_WITH_CUSTOM_LLVM=1 -DWAMR_BUILD_LOAD_CUSTOM_SECTION=1 -DLLVM_DIR=/usr/local/opt/llvm@14/lib/cmake/llvm/
        make -j

    - name: Make WASM LD no check features
      run: |
        sudo mv /opt/wasi-sdk/bin/wasm-ld /opt/wasi-sdk/bin/wasm-ld.bak
        echo '#!/bin/bash 
        /opt/wasi-sdk/bin/wasm-ld.bak --no-check-features "$@"' | sudo tee /opt/wasi-sdk/bin/wasm-ld
        sudo chmod +x /opt/wasi-sdk/bin/wasm-ld

    - name: configure cmake
      run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build}} -DLLVM_DIR=/usr/local/opt/llvm@14/lib/cmake/llvm/

    - name: build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{matrix.build}}

    - name: test
      working-directory: ${{runner.workspace}}/build
      run: ctest -V --timeout 10
          
    - name: bench
      working-directory: ${{runner.workspace}}/build/bench
      run: |
        ./MVVM_benchmark